<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   inkscape:export-ydpi="96"
   inkscape:export-xdpi="96"
   inkscape:export-filename="/home/jeff/Projects/antsy-wallpaper/arch/gradient/antsy-arch-gradient-mtoc.png"
   width="3840"
   height="2160"
   viewBox="0 0 1016 571.50002"
   version="1.1"
   id="svg8"
   inkscape:version="1.0 (4035a4fb49, 2020-05-01)"
   sodipodi:docname="antsy-wall_v4.svg">
  <defs
     id="defs2">
    <linearGradient
       inkscape:collect="always"
       id="Blue_to_Magenta">
      <stop
         style="stop-color:#14f0f0;stop-opacity:1"
         offset="0"
         id="stop952" />
      <stop
         id="stop954"
         offset="0"
         style="stop-color:#5833ff;stop-opacity:1" />
      <stop
         style="stop-color:#f935f8;stop-opacity:1"
         offset="1"
         id="stop956" />
    </linearGradient>
    <linearGradient
       id="Cyan_to_Magenta"
       inkscape:collect="always">
      <stop
         id="stop940"
         offset="0"
         style="stop-color:#14f0f0;stop-opacity:1" />
      <stop
         style="stop-color:#15eff0;stop-opacity:1;"
         offset="0.00512081"
         id="stop946" />
      <stop
         id="stop942"
         offset="1"
         style="stop-color:#f935f8;stop-opacity:1" />
    </linearGradient>
    <linearGradient
       inkscape:collect="always"
       id="Cyan_to_Magenta_xxx-7">
      <stop
         style="stop-color:#14f0f0;stop-opacity:1"
         offset="0"
         id="stop924" />
      <stop
         style="stop-color:#f935f8;stop-opacity:1"
         offset="1"
         id="stop926" />
    </linearGradient>
    <linearGradient
       id="Cyan_to_Blue"
       inkscape:collect="always">
      <stop
         id="stop873"
         offset="0"
         style="stop-color:#14f0f0;stop-opacity:1" />
      <stop
         id="stop875"
         offset="1"
         style="stop-color:#5833ff;stop-opacity:1" />
    </linearGradient>
    <linearGradient
       inkscape:collect="always"
       id="Green_to_Blue">
      <stop
         style="stop-color:#31e722;stop-opacity:1"
         offset="0"
         id="stop835" />
      <stop
         style="stop-color:#5833ff;stop-opacity:1"
         offset="1"
         id="stop837" />
    </linearGradient>
    <linearGradient
       inkscape:collect="always"
       xlink:href="#Green_to_Blue"
       id="linearGradient843"
       gradientUnits="userSpaceOnUse"
       x1="-182.15776"
       y1="-159.94418"
       x2="4257.6729"
       y2="2508.1843"
       gradientTransform="matrix(0.23646562,0,0,0.22131736,26.140709,25.873421)" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#Green_to_Blue"
       id="linearGradient867"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.23646562,0,0,0.22131736,-989.85934,-545.62656)"
       x1="-182.15776"
       y1="-159.94418"
       x2="4257.6729"
       y2="2508.1843" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#Cyan_to_Blue"
       id="linearGradient879"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.23646562,0,0,0.22131736,26.140629,25.87347)"
       x1="-182.15776"
       y1="-159.94418"
       x2="4257.6729"
       y2="2508.1843" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#Cyan_to_Blue"
       id="linearGradient890"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.23646562,0,0,0.22131736,-989.85934,-545.62656)"
       x1="-182.15776"
       y1="-159.94418"
       x2="4257.6729"
       y2="2508.1843" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#Cyan_to_Magenta_xxx-7"
       id="linearGradient906"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.23646562,0,0,0.22131736,26.140629,25.87347)"
       x1="-182.15776"
       y1="-159.94418"
       x2="4257.6729"
       y2="2508.1843" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#Cyan_to_Magenta"
       id="linearGradient934"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.23646562,0,0,0.22131736,-989.85931,-545.62659)"
       x1="-182.15776"
       y1="-159.94418"
       x2="4257.6729"
       y2="2508.1843" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#Blue_to_Magenta"
       id="linearGradient950"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.23646562,0,0,0.22131736,-989.85931,-545.62659)"
       x1="-182.15776"
       y1="-159.94418"
       x2="4257.6729"
       y2="2508.1843" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#Blue_to_Magenta"
       id="linearGradient964"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.23646562,0,0,0.22131736,26.14066,25.87344)"
       x1="-182.15776"
       y1="-159.94418"
       x2="4257.6729"
       y2="2508.1843" />
    <radialGradient
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1,0,0,0.99656038,0,1.250628)"
       r="410.64853"
       fy="363.59464"
       fx="286.51566"
       cy="363.59464"
       cx="286.51566"
       id="radialGradient1007"
       xlink:href="#Cyan_to_Magenta_xxx-7"
       inkscape:collect="always" />
    <filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter4021"
       x="-0.0093749998"
       width="1.01875"
       y="-0.016666667"
       height="1.0333333">
      <feGaussianBlur
         inkscape:collect="always"
         stdDeviation="4.1010417"
         id="feGaussianBlur4023" />
    </filter>
    <meshgradient
       y="-9.5249468"
       x="-16.908195"
       gradientUnits="userSpaceOnUse"
       id="meshgradient4037"
       inkscape:collect="always">
      <meshrow
         id="meshrow4039">
        <meshpatch
           id="meshpatch4041">
          <stop
             path="c 338.658,6.33008e-08  711.179,-3.95552e-05  1049.84,0"
             style="stop-color:#000000;stop-opacity:1"
             id="stop4043" />
          <stop
             path="c -0.00472479,190.5  -0.00475203,400.049  0.000967418,590.55"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop4045" />
          <stop
             path="c -338.664,-0.00540938  -711.188,-0.00543323  -1049.85,-0.00122441"
             style="stop-color:#000000;stop-opacity:1"
             id="stop4047" />
          <stop
             path="c -0.022779,-190.504  -0.0228559,-400.054  0.0090323,-590.549"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop4049" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <sodipodi:namedview
     showguides="false"
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="0.24748737"
     inkscape:cx="1735.8742"
     inkscape:cy="1327.4882"
     inkscape:document-units="px"
     inkscape:current-layer="layer7"
     inkscape:document-rotation="0"
     showgrid="false"
     borderlayer="true"
     inkscape:pagecheckerboard="true"
     units="px"
     inkscape:window-width="1896"
     inkscape:window-height="1030"
     inkscape:window-x="10"
     inkscape:window-y="10"
     inkscape:window-maximized="0"
     inkscape:showpageshadow="false" />
  <metadata
     id="metadata5">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     id="g932"
     inkscape:groupmode="layer"
     inkscape:label="Gradient: Magenta to Cyan"
     style="display:none"
     sodipodi:insensitive="true">
    <rect
       y="-581.02502"
       x="-1032.9333"
       height="590.54999"
       width="1049.8667"
       id="rect930"
       style="fill:url(#linearGradient934);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.0605469;stroke-miterlimit:4;stroke-dasharray:none"
       transform="scale(-1)" />
  </g>
  <g
     style="display:inline"
     inkscape:label="Gradient: Magenta to Blue"
     inkscape:groupmode="layer"
     id="g938"
     sodipodi:insensitive="true">
    <rect
       transform="scale(-1)"
       style="fill:url(#linearGradient950);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.0605469;stroke-miterlimit:4;stroke-dasharray:none"
       id="rect936"
       width="1049.8667"
       height="590.54999"
       x="-1032.9333"
       y="-581.02502" />
  </g>
  <g
     inkscape:label="Gradient: Green to Blue"
     inkscape:groupmode="layer"
     id="layer1"
     style="display:inline"
     sodipodi:insensitive="true">
    <rect
       style="fill:url(#linearGradient843);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.0605469;stroke-miterlimit:4;stroke-dasharray:none"
       id="rect10"
       width="1049.8667"
       height="590.54999"
       x="-16.933334"
       y="-9.5250006" />
  </g>
  <g
     style="display:inline"
     inkscape:label="Gradient: Cyan to Magenta"
     inkscape:groupmode="layer"
     id="g894"
     sodipodi:insensitive="true">
    <rect
       style="fill:url(#linearGradient906);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.0605469;stroke-miterlimit:4;stroke-dasharray:none"
       id="rect892"
       width="1049.8667"
       height="590.54999"
       x="-16.93338"
       y="-9.5249634" />
  </g>
  <g
     id="g888"
     inkscape:groupmode="layer"
     inkscape:label="Gradient: Cyan to Blue"
     style="display:inline"
     sodipodi:insensitive="true">
    <rect
       y="-9.5249634"
       x="-16.93338"
       height="590.54999"
       width="1049.8667"
       id="rect886"
       style="fill:url(#linearGradient879);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.0605469;stroke-miterlimit:4;stroke-dasharray:none" />
  </g>
  <g
     id="g962"
     inkscape:groupmode="layer"
     inkscape:label="Gradient: Blue to Magenta"
     style="display:inline"
     sodipodi:insensitive="true">
    <rect
       y="-9.5249939"
       x="-16.93335"
       height="590.54999"
       width="1049.8667"
       id="rect960"
       style="fill:url(#linearGradient964);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.0605469;stroke-miterlimit:4;stroke-dasharray:none" />
  </g>
  <g
     id="g865"
     inkscape:groupmode="layer"
     inkscape:label="Gradient: Blue to Green"
     style="display:inline"
     sodipodi:insensitive="true">
    <rect
       y="-581.02502"
       x="-1032.9333"
       height="590.54999"
       width="1049.8667"
       id="rect863"
       style="fill:url(#linearGradient867);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.0605469;stroke-miterlimit:4;stroke-dasharray:none"
       transform="scale(-1)" />
  </g>
  <g
     style="display:inline"
     inkscape:label="Gradient: Blue to Cyan"
     inkscape:groupmode="layer"
     id="g871"
     sodipodi:insensitive="true">
    <rect
       transform="scale(-1)"
       style="fill:url(#linearGradient890);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.0605469;stroke-miterlimit:4;stroke-dasharray:none"
       id="rect869"
       width="1049.8667"
       height="590.54999"
       x="-1032.9333"
       y="-581.02502" />
  </g>
  <g
     style="display:none"
     inkscape:label="Solid: Blue"
     inkscape:groupmode="layer"
     id="g968"
     sodipodi:insensitive="true">
    <rect
       transform="scale(-1)"
       style="fill:#5833ff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.0605469;stroke-miterlimit:4;stroke-dasharray:none"
       id="rect966"
       width="1049.8667"
       height="590.54999"
       x="-1032.9333"
       y="-581.02502" />
  </g>
  <g
     id="g972"
     inkscape:groupmode="layer"
     inkscape:label="Solid: Green"
     style="display:none"
     sodipodi:insensitive="true">
    <rect
       y="-581.02502"
       x="-1032.9333"
       height="590.54999"
       width="1049.8667"
       id="rect970"
       style="fill:#31e722;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.0605469;stroke-miterlimit:4;stroke-dasharray:none"
       transform="scale(-1)" />
  </g>
  <g
     style="display:none"
     inkscape:label="Solid: Magenta"
     inkscape:groupmode="layer"
     id="g976"
     sodipodi:insensitive="true">
    <rect
       transform="scale(-1)"
       style="fill:#f935f8;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.0605469;stroke-miterlimit:4;stroke-dasharray:none"
       id="rect974"
       width="1049.8667"
       height="590.54999"
       x="-1032.9333"
       y="-581.02502" />
  </g>
  <g
     id="g980"
     inkscape:groupmode="layer"
     inkscape:label="Solid: Grey"
     style="display:none"
     sodipodi:insensitive="true">
    <rect
       y="-581.02502"
       x="-1032.9333"
       height="590.54999"
       width="1049.8667"
       id="rect978"
       style="fill:#818383;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.0605469;stroke-miterlimit:4;stroke-dasharray:none"
       transform="scale(-1)" />
  </g>
  <g
     inkscape:label="Effect: Blur"
     id="layer6"
     inkscape:groupmode="layer"
     style="display:none"
     sodipodi:insensitive="true">
    <rect
       style="opacity:0.3;fill:url(#meshgradient4037);fill-opacity:1;fill-rule:evenodd;stroke-width:0.264583;filter:url(#filter4021)"
       id="rect3949"
       width="1049.8667"
       height="590.54999"
       x="-16.93335"
       y="-9.5249643" />
  </g>
  <g
     inkscape:label="Effect: Test"
     id="layer7"
     inkscape:groupmode="layer" />
  <g
     inkscape:groupmode="layer"
     id="layer2"
     inkscape:label="Logo: Arch"
     style="display:inline"
     sodipodi:insensitive="true">
    <path
       d="M 508.00002,73.953831 C 489.16607,120.2181 477.76198,150.3698 456.81131,195.25175 c 12.87265,13.65033 28.63966,29.54693 54.34201,47.4738 -27.60292,-11.3609 -46.39377,-22.72177 -60.43296,-34.60103 -26.91181,56.11326 -68.98592,135.94179 -154.38702,289.33527 67.12863,-38.79114 119.18133,-62.63602 167.60548,-71.79385 -2.07347,-8.98503 -3.28295,-18.66122 -3.19658,-28.72618 l 0.0865,-2.11667 c 1.07984,-42.98127 23.45599,-76.02719 49.89271,-73.82411 26.52325,2.20306 47.08504,38.92074 46.0052,81.98841 -0.216,8.07788 -1.12326,15.85339 -2.72146,23.06732 47.99214,9.37382 99.44012,33.2187 165.66148,71.49147 -13.04555,-24.01766 -24.66562,-45.70271 -35.8106,-66.35099 -17.53795,-13.56394 -35.81044,-31.23162 -73.13286,-50.4544 25.57271,6.60919 43.93156,14.29829 58.27311,22.93775 C 555.99232,193.04868 546.87772,165.01366 508.00018,73.953831 Z"
       id="path1130"
       style="stroke-width:0.431971" />
  </g>
  <g
     inkscape:groupmode="layer"
     id="layer3"
     inkscape:label="Logo: Tux"
     style="display:none"
     sodipodi:insensitive="true">
    <g
       id="g1193"
       transform="matrix(0.43200301,0,0,0.43200301,251.35207,22.138305)">
      <path
         id="path1189"
         d="m 495.5,161.6 c -1.3,2.2 -2.6,4.4 -3.7,6.8 3.9,-7.7 9.4,-14.2 16.2,-19 -4.7,2.8 -9,6.7 -12.5,12.2 -1.3,2.1 3.5,-5.5 0,0 z" />
      <path
         id="path1191"
         d="m 964.89914,916.34229 c -14.7,-8.7 -28.9,-24.1 -26.2,-41.1 5,-33.5 5.5,-47 -0.4,-56.4 -4.2,-7 -12,-10.9 -18.8,-12.7 4.4,-5.5 6.8,-11.8 8.3,-23.8 4,-31 -7.1,-67.1 -14.5,-96.8 -9.7,-39.1 -22.6,-74.4 -44.7,-108.3 -36.1,-55.4 -81.5,-102.4 -113.5,-160.7 -21.2,-63.4 -9.4,-103 -10.5,-144.8 -1.9,-81.5 -58.8,-151.5 -141.2,-151.5 h -30.6 c -82,0 -126.8,58.8 -126.8,131.2 1.5,36.4 3,72.9 4.4,109.3 1.7,43.2 4.3,82.4 -17.5,120.9 -15.4,27.3 -42.8,49.1 -62.5,73.2 -20.8,25.5 -28.6,51.8 -39.1,82.3 -13.1,38.1 -46.5,67.6 -54.4,107 -3.6,18.1 6,39.1 -1.8,54 -8.1,15.5 -1.8,31.6 -6.2,47.4 -7.7,25.7 -45.3,23.5 -66.1,25.2 -38.5,3.2 -24.2,39.3 -17.2,65 12.2,44.7 -42.7,92.00001 24.1,110.40001 30.6,8.4 62.5,11.2 93.4,18.2 30.6,6.9 58.9,18.8 88.3,29 22.9,7.9 44.3,9.1 66.3,-2.7 24,-12.8 41.4,-33 69.3,-37.2 54,-8.1 119.9,-9.1 173.6,1.4 16.4,3.2 22,14.3 32.6,25.7 17.8,19.3 47,22.1 71.7,18 26,-4.4 45.6,-20.7 64.9,-37.4 27.4,-23.7 57.2,-39.4 89.2,-55.9 16.3,-8.40001 48.49996,-20.50001 52.79996,-41.30001 5.2,-24.5 -30.89996,-38.1 -46.89996,-47.6 z m -490.6,120.90001 c -2.8,28.4 -30.4,44.4 -55.5,42.2 -42.6,-3.6 -82.8,-26.8 -125,-34.4 -20.6,-3.8 -103.6,-7 -102.7,-37.4 0.5,-16.10001 12.6,-25.50001 16.5,-40.30001 6.1,-22.9 -12.6,-43.6 -13.8,-66 -1,-17.7 23.5,-16.6 35.6,-17.6 19.2,-1.5 41.9,-4.4 51.6,-24.2 3.5,-7.2 -1.1,-32.8 4.2,-47.7 7.7,-22.2 33.9,-19.6 51,-10.7 38.8,19.8 63.3,77.7 84.3,113.3 21.1,36.3 58.3,78.1 53.8,122.80001 z m 254.4,-143.50001 c 5,25.8 9.2,53.3 3.7,79.4 -4.4,20.8 -18.7,34.10001 -27.8,52.50001 -4.8,-14.9 24.7,-36.50001 21.4,-73.70001 -0.1,-1 -2.1,-23.8 -2.3,-23.7 -4.3,2.4 -8.4,11.1 -11.6,14.7 -10.5,11.8 -23.6,21.1 -36.6,29.9 -30.2,20.4 -63.9,32.90001 -100.2,36.40001 -45.9,4.4 -83.1,-23.00001 -83.1,-23.00001 5.5,18.20001 19.7,45.90001 2.4,61.90001 3.8,-34.2 -10.7,-61.40001 -25.4,-91.20001 101.4,-53.9 -90.5,-140.8 -115.9,-174.5 -22.9,-30.4 -12.1,-69.6 -5.9,-95.1 -7.5,30.1 -8.7,91.8 30.6,102.4 17.3,4.7 12.3,-81.1 13.1,-90.7 3.5,-40 16.9,-78.7 40.1,-111.6 7.4,-10.5 4.1,-20.8 5.8,-33.5 3.7,-23.3 16,-44.9 29.5,-63.9 11.3,-15.8 3.8,-27.6 6.6,-46 1.6,-10.5 11.2,7 12.7,9.4 8.7,14.2 36.5,49.6 54,48.1 29,-2.5 54,-34.9 78.8,-48.2 7.9,-4.2 31.5,-11.5 34.7,-21.1 3.9,-11.7 -27.7,-0.4 -30.9,1.3 -23.6,12.1 -67.8,46.9 -95.9,33.4 -19.2,-9.2 -23.4,-32.8 -37.6,-44.8 33.7,29.7 47,23 60.4,19.9 21.1,-4.8 41.1,-14.2 60.8,-23 9.2,-4.1 44,-8.8 48.8,-19 6,-12.8 -11,-14.7 -17.6,-7.8 -13.7,14.2 -34.7,19.6 -52.7,25.8 -41.3,14.1 -82.3,20 -113.4,-18.8 -18.3,-22.3 34,-49.2 48.6,-63 0,0 2.2,-15.7 -1.3,-27.8 -4.2,-14.2 -17.1,-20.3 -26,-17.7 -9,2.4 -17.5,12 -14.9,32.4 2.2,18.2 15.3,24.1 15.3,24.1 0,0 -5.9,7.7 -11.4,10.3 0,0 -1.8,-0.7 -7.7,-13.8 -5.9,-13.1 -14.4,-42.6 -0.7,-68 13.8,-25.4 42.9,-11.4 52.1,8.3 8.5,18.2 5.2,49.6 5.2,49.6 7.3,-1.8 14.9,-2.8 22.5,-2.8 9.3,0 14.9,10 23.2,10.5 -1.4,0 -1.2,-39.6 -0.5,-43.9 2.4,-14.2 9,-29.8 21.7,-37.7 35.2,-25.1 75.7,8.6 75.7,46.4 0.1,9.8 -0.3,20.2 -2.6,29.7 -1.4,5.8 -3.5,18.5 -11.2,20.1 -2.5,0.5 -23.4,-0.9 -17.5,-7.2 28,-28 -4,-83.6 -38.1,-53.6 -12.3,9.2 -12,30.3 -10.5,43.7 2.4,20 44.9,25.2 58.7,30.1 18,6.3 17.4,21.1 14.6,37.4 -4.2,24.6 -6.2,41.1 9.6,61.7 16.1,21 28.3,43.9 34.8,69.7 3.2,12.8 3.6,23.7 12.3,34.1 13.1,15.6 23.2,32.4 29.1,52.1 11.4,38.5 14.2,77.5 13.5,117.3 -1.1,17.9 -4.6,32.8 18.2,21.2 8.7,-4.4 14.2,-6.3 24.1,-8.1 6.8,-13.8 9.6,-40 9.8,-53.1 0.4,-29.5 -0.7,-90.8 -60.6,-156.4 0,0 62.3,47.5 72.2,135.6 5.5,48.8 -4.4,75.2 -4.4,75.2 11.6,2.8 23.6,11.6 29.7,21.4 -0.3,-0.5 2.3,3.8 2.6,4.1 -21.5,-17.9 -69.3,-28.1 -86.8,0.5 -4.4,7.2 -6.8,16.6 -7,25.6 -15.5,-2.6 -27.1,0 -36.7,10.7 -12.6,15.5 -6.5,53.1 -2.1,75.8 4.3,22.6 -4.4,-22.7 0,0 z m -213.7,-570.3 c -0.4,-10.7 -4.6,-19.7 -10.3,-23.6 0.7,-0.7 1.8,-1.5 3.7,-0.9 3.1,0.9 7.7,5.9 9.4,13.8 1.5,6.3 0.9,16.8 -3.1,16.8 0.1,-2 0.2,-4.1 0.3,-6.1 -0.4,-10.7 0,1.9 0,0 z m 119.6,-26.3 c 0.9,-0.7 2.4,-1.3 5,-0.7 3.9,0.9 9.6,6.1 11.6,13.6 1.5,6.1 0.2,16.2 -4.8,16 0,-2 0.1,-3.9 0.4,-5.9 -0.1,-10.1 -5,-18.8 -12.2,-23 0.9,-0.6 7.2,4.2 0,0 z m 299.9,699.9 c -38.3,16.50001 -68.5,43.70001 -103,66.00001 -30.2,19.5 -83.4,18.2 -87.5,-28.2 -3.4,-38.90001 9.2,-77.20001 4,-116.70001 -3.5,-26.8 -18.7,-63.2 -5,-89.3 5.9,-11.2 17.7,-12 27.3,-8.7 7,29 30.5,51.6 61.2,51.6 37.2,0 51.5,-30.6 74.4,-53.6 7.4,0.4 16.2,2.4 19.2,10.5 5,12.7 -4.2,38.3 -3.9,48.8 0.7,34.3 19.7,42 57.7,63.4 33.39996,19.2 9.1,33 -44.4,56.2 -52.7,22.70001 53.5,-23.2 0,0 z" />
    </g>
  </g>
  <g
     style="display:none"
     inkscape:label="Logo: Debian"
     id="layer5"
     inkscape:groupmode="layer"
     sodipodi:insensitive="true">
    <path
       d="m 338.27412,211.54535 c 2.19783,-6.74524 2.59594,-10.79709 3.43526,-14.7006 -6.07397,7.76409 -2.795,9.41918 -3.43526,14.7006 m 14.02565,-46.82647 c 1.09278,10.1179 -7.61204,14.04483 1.92833,7.37373 5.11358,-11.51925 -1.99877,-3.18135 -1.92833,-7.37373 M 515.98925,76.179493 c 4.74283,-1.73707 11.6599,-0.952464 16.6914,-2.096161 -6.55794,0.550381 -13.08444,0.878248 -19.52916,1.709709 l 2.83776,0.386452 m 152.39688,188.847847 -1.03051,2.58412 c -1.88932,13.42027 -5.96831,26.69999 -12.22184,39.01165 6.9092,-12.99085 11.37875,-27.19961 13.25235,-41.59577 m -192.84896,41.91587 c -2.43965,-2.69733 -3.88401,-5.94504 -5.50007,-9.18105 1.54593,5.68743 4.7117,10.57462 7.65891,15.54378 l -2.15884,-6.36273 m -10.89857,0.42938 -0.98365,4.91843 c 4.61012,6.26125 8.2677,13.04553 14.15426,17.94054 -4.23559,-8.26765 -7.38154,-11.6832 -13.17061,-22.85896 m 174.17453,-50.38648 c 0.41761,11.3436 -3.31797,16.84753 -6.68656,26.59071 l -6.06235,3.02912 c -4.96138,9.63387 0.4802,6.11678 -3.07205,13.77936 -7.74444,6.8858 -23.5028,21.54738 -28.54627,22.88629 -3.68086,-0.0821 2.49437,-4.34461 3.30225,-6.01529 -10.36744,7.11996 -8.31834,10.68778 -24.17421,15.01286 l -0.46447,-1.03052 c -39.10553,18.39724 -93.42665,-18.06154 -92.71249,-67.80783 -0.41762,3.15793 -1.18649,2.36944 -2.05317,3.64586 -2.01796,-25.59529 11.81996,-51.30382 35.15893,-61.80033 22.82765,-11.30068 49.59025,-6.66329 65.94203,8.57599 -8.98188,-11.7652 -26.86008,-24.23688 -48.0484,-23.06973 -20.75498,0.3279 -40.17096,13.51784 -46.65091,27.83591 -10.63315,6.69452 -11.8665,25.80611 -16.49988,29.30365 -6.23405,45.81547 11.72592,65.61016 42.10712,88.8946 4.78182,3.2243 1.34656,3.71225 1.99468,6.16756 -10.09446,-4.72717 -19.33797,-11.86278 -26.93806,-20.59885 4.03212,5.90212 8.38468,11.64029 14.0096,16.14883 -9.51679,-3.22429 -22.23047,-23.06193 -25.94279,-23.86996 16.40651,29.3739 66.56279,51.51462 92.82539,40.53014 -12.15141,0.4489 -27.58997,0.24969 -41.24423,-4.79742 -5.73435,-2.95105 -13.5335,-9.06395 -12.14009,-10.20765 35.84196,13.38902 72.86697,10.1413 103.88024,-14.72014 7.88909,-6.14414 16.50807,-16.59773 18.99836,-16.74213 -3.75132,5.64054 0.64025,2.71292 -2.2406,7.69381 7.86173,-12.6786 -3.41545,-5.16045 8.12715,-21.89481 l 4.26263,5.87089 c -1.58493,-10.52388 13.06903,-23.30394 11.58159,-39.94852 3.36105,-5.09016 3.7513,5.47661 0.18239,17.18716 4.94975,-12.99089 1.30379,-15.07924 2.57646,-25.79831 1.37391,3.60294 3.17738,7.4323 4.10255,11.23432 -3.22424,-12.55368 3.31011,-21.14139 4.92616,-28.43709 -1.59247,-0.70652 -4.9771,5.5508 -5.74975,-9.2786 0.11322,-6.4408 1.79153,-3.37655 2.43966,-4.96139 -1.2648,-0.72604 -4.58277,-5.664 -6.60103,-15.1339 1.46386,-2.22499 3.91137,5.76939 5.90228,6.09728 -1.28053,-7.52987 -3.48589,-13.27192 -3.57552,-19.04913 -5.81643,-12.1555 -2.05726,1.61998 -6.7765,-5.21897 -6.19096,-19.31065 5.13686,-4.48123 5.90196,-13.25634 9.38408,13.59593 14.73571,34.66708 17.1911,43.39533 -1.87361,-10.64098 -4.90289,-20.95013 -8.59949,-30.92359 2.84973,1.19838 -4.59062,-21.89481 3.70445,-6.60085 -8.8608,-32.60211 -37.92248,-63.0651 -64.65772,-77.35974 3.27142,2.994 7.40134,6.75307 5.91799,7.34251 -13.29545,-7.91632 -10.95737,-8.53306 -12.8621,-11.878388 -10.83222,-4.407072 -11.54293,0.355219 -18.71755,0.0095 -20.41534,-10.828378 -24.34999,-9.676851 -43.13764,-16.461154 l 0.85505,3.993326 c -13.52564,-4.504682 -15.7587,1.709737 -30.37712,0.01571 -0.88995,-0.694855 4.68402,-2.513874 9.27087,-3.181368 -13.07689,1.725339 -12.464,-2.576322 -25.25975,0.476242 3.15413,-2.213303 6.48782,-3.677122 9.85264,-5.558628 -10.6646,0.647991 -25.45882,6.206589 -20.89177,1.151556 -17.39394,7.76016 -48.28646,18.654853 -65.6219,34.909084 l -0.54654,-3.64199 c -7.94351,9.53629 -34.63975,28.48 -36.76714,40.83073 l -2.1233,0.49574 c -4.134,6.99899 -6.80794,14.93091 -10.08692,22.13288 -5.40635,9.21229 -7.92399,3.54439 -7.15511,4.98868 -10.63316,21.55908 -15.91436,39.67528 -20.47762,54.53204 3.25161,4.85987 0.0786,29.25678 1.30756,48.78212 -5.34,96.43232 67.67916,190.06186 147.494,211.6795 11.69889,4.18458 29.0969,4.02451 43.89521,4.45389 -17.46061,-4.99258 -19.71661,-2.64658 -36.72437,-8.57602 -12.2687,-5.77718 -14.95836,-12.37409 -23.64747,-19.91569 l 3.43904,6.07775 c -17.04267,-6.03089 -9.91113,-7.46347 -23.7764,-11.85493 l 3.67332,-4.79742 c -5.52333,-0.41768 -14.63038,-9.3099 -17.12066,-14.23223 l -6.04284,0.23806 c -7.26046,-8.95858 -11.12876,-15.41498 -10.84762,-20.41535 l -1.95191,3.47803 c -2.21323,-3.79812 -26.71166,-33.5975 -14.00176,-26.66096 -2.36166,-2.15865 -5.50006,-3.5132 -8.90388,-9.69635 l 2.58777,-2.95885 c -6.11674,-7.86947 -11.25768,-17.95614 -10.86712,-21.31706 3.26326,4.40707 5.52711,5.2307 7.76771,5.98408 -15.4461,-38.32464 -16.31247,-2.1118 -28.01136,-39.01167 l 2.47488,-0.19905 c -1.8972,-2.85731 -3.04879,-5.96062 -4.5749,-9.0053 l 1.07737,-10.73466 c -11.12122,-12.85819 -3.11136,-54.67255 -1.50694,-77.60567 1.1126,-9.32547 9.28251,-19.2521 15.49705,-34.81927 l -3.78653,-0.6519 c 7.2372,-12.62397 41.32254,-50.69879 57.10827,-48.73923 7.64695,-9.60651 -1.51826,-0.0352 -3.01325,-2.45528 16.79675,-17.38233 22.07796,-12.28048 33.41395,-15.40718 12.22563,-7.25664 -10.49258,2.83004 -4.69597,-2.76758 21.1336,-5.39853 14.97786,-12.27264 42.54833,-15.0129 2.9079,1.65508 -6.74914,2.5568 -9.17338,4.70374 17.60871,-8.61505 55.72271,-6.65549 80.47868,4.78179 28.72583,13.42415 61.00014,53.10725 62.2728,90.44432 l 1.44813,0.39031 c -0.73396,14.84117 2.27173,32.00487 -2.93557,47.77118 l 3.54438,-7.46353 m -116.7304,-175.361233 -2.64658,0.546518 2.46293,-0.218556 0.18239,-0.327896 m -7.47902,-2.080567 c 3.74344,0.671393 8.08784,1.18665 7.47902,2.080567 4.09471,-0.897808 5.02365,-1.725367 -7.47902,-2.080567 M 592.74556,252.1983 c 0.84719,-12.63172 -2.4865,-8.63844 -3.60664,-3.81763 1.30756,0.67923 2.34216,8.90393 3.60664,3.81763 m -13.89639,36.16214 c 4.17678,-5.76549 7.22147,-12.07746 8.29507,-18.60414 -0.93681,4.65298 -3.46263,8.6697 -5.8397,12.9089 -13.1118,8.25592 -1.23366,-4.9028 0,-9.90321 -14.09955,17.74535 -1.93619,10.64099 -2.44752,15.59845 m -37.64921,9.38404 c -7.01456,0.0975 1.32706,3.61463 10.48473,5.0238 2.52958,-1.97517 4.82459,-3.97375 6.87021,-5.91771 -5.70322,1.39743 -11.50769,1.42866 -17.35494,0.89391"
       style="overflow:visible;fill:#000000;fill-opacity:1;stroke-width:0.832033"
       id="path3296" />
  </g>
  <script
     type="text/javascript"
     id="mesh_polyfill">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
